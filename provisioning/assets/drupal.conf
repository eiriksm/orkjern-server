# Drupal include, adapted from https://raw.github.com/perusio/drupal-with-nginx
index index.php;

if ($request_uri ~* "^(.*/)index\.php$") {
    return 301 https://$host$1;
}

## The 'default' location.
location / {

    ## Deny access to all composer related files.
    location ~* composer\.(json|lock)$ {
        deny all;
    }

    ## If accessing an image generated by imagecache, serve it directly if
    ## available, if not relay the request to Drupal to (re)generate the
    ## image.
    location ~ ^/sites/default/files/ {
        expires 30d;
        access_log off;
        try_files $uri @rewrite;
    }

    ## If accessing an image generated by imagecache, serve it directly if
    ## available, if not relay the request to Drupal to (re)generate the
    ## image.
    location ~* /imagecache/ {
        access_log off;
        expires 30d;
        try_files $uri @rewrite;
    }

    ## Drupal 7 generated image handling, i.e., imagecache in core. See:
    ## https://drupal.org/node/371374.
    location ~* /files/styles/ {
        access_log off;
        expires 30d;
        try_files $uri @rewrite;
    }

    ## Regular private file serving (i.e. handled by Drupal).
    location ^~ /system/files/ {
        ## For not signaling a 404 in the error log whenever the
        ## system/files directory is accessed add the line below.
        ## Note that the 404 is the intended behavior.
        log_not_found off;
        access_log off;
        expires 30d;
        try_files $uri @rewrite;
    }

    location ^~ /system/redis/ {
        ## For not signaling a 404 in the error log whenever the
        ## system/files directory is accessed add the line below.
        ## Note that the 404 is the intended behavior.
        log_not_found off;
        access_log off;
        expires 30d;
        try_files $uri @rewrite;
    }

    # Google verification code.
    location ~ ^/google.*\.html$ {
	    try_files $uri @rewrite;
    }

    ## All static files will be served directly.
    location ~* ^.+\.(?:css|js|jpe?g|gif|htc|ico|png|html|xml)$ {
        log_not_found off;
        expires 30d;
        ## No need to bleed constant updates. Send the all shebang in one
        ## fell swoop.
        tcp_nodelay off;
        ## Set the OS file cache.
        open_file_cache max=3000 inactive=120s;
        open_file_cache_valid 45s;
        open_file_cache_min_uses 2;
        open_file_cache_errors off;
    }

    ## PDFs and powerpoint files handling.
    location ~* ^.+\.(?:pdf|pptx?)$ {
        expires 30d;
        ## No need to bleed constant updates. Send the all shebang in one
        ## fell swoop.
        tcp_nodelay off;
    }

    ## Replicate the Apache <FilesMatch> directive of Drupal standard
    ## .htaccess. Disable access to any code files. Return a 404 to curtail
    ## information disclosure. Hide also the text files.
    location ~* ^(?:.+\.(?:htaccess|make|txt|engine|inc|info|install|module|profile|po|sh|.*sql|theme|tpl(?:\.php)?|xtmpl)|code-style\.pl|/Entries.*|/Repository|/Root|/Tag|/Template)$ {
        return 404;
    }

    try_files $uri $uri/ /index.php?$query_string;
}

########### Security measures ##########

## Restrict access to the strictly necessary PHP files. Reducing the
## scope for exploits. Handling of PHP code and the Drupal event loop.
location = /status.php {
    allow 10.100.0.0/16;
    deny all;
    include fastcgi.conf;
    fastcgi_pass $php_upstream;
}

location = /sites/all/modules/contrib/ckeditor/ckfinder/core/connector/php/connector.php {
    include fastcgi.conf;
    fastcgi_pass $php_upstream;
}

location = /sites/all/libraries/ckfinder/core/connector/php/connector.php {
    include fastcgi.conf;
    fastcgi_pass $php_upstream;
}

location = /index.php {
    include fastcgi.conf;
    ## This enables a fallback for whenever the 'default' upstream fails.
    fastcgi_pass $php_upstream;
    ## FastCGI Cache.
    # include fastcgi_cache;

    ## Filefield Upload progress
    ## http://drupal.org/project/filefield_nginx_progress support
    ## through the NgninxUploadProgress modules.
    #track_uploads uploads 60s;
}

location @rewrite {
    # Some modules enforce no slash (/) at the end of the URL
    # Else this rewrite block wouldn't be needed (GlobalRedirect)
    rewrite ^/(.*)$ /index.php?q=$1;
}

## Disallow access to .git directory: return 404 as not to disclose
## information.
location ~ /.git {
    return 404;
}

## Disallow access to patches directory.
location ~ /patches {
    return 404;
}

## Disallow access to drush backup directory.
location = /backup {
    return 404;
}

## Disable access logs for robots.txt.
location = /robots.txt {
    access_log off;
}

## RSS feed support.
location = /rss.xml {
    try_files $uri @rewrite;
}

## XML Sitemap support.
location = /sitemap.xml {
    try_files $uri @rewrite;
}

## Support for favicon. Return a 204 (No Content) if the favicon
## doesn't exist.
location = /favicon.ico {
    try_files /favicon.ico =204;
}

## Any other attempt to access PHP files returns a 404.
location ~* ^.+\.php$ {
    return 404;
}
